Reflection 1: 

What happens when you initialize a repository? Why do you need
to do it?


An empty repository is created which contains no commit. It 
works that way so that it won't automatically include files 
you actually don't want to keep track of. 

------------------------------------------------------------

Reflection 2:

How is the staging area different from the working directory 
and the repository? What value do you think it offers?

A staging area is different from the working directory and
repository because we can add the files that we want to change
and add a seperate commit on it.

------------------------------------------------------------

Reflection 3:

How can you use the staging area to make sure you have one
commit per logical change?

By adding files that are related to first logical change and
making sure all files are staged, then make a commit. Next
stage other files that are related to second logical change to 
commit.

------------------------------------------------------------

Reflection 4:

What are some situations when branches would be helpful in 
keeping your history organized? How would branches help?

When you want to add a new feature, but also keep the old
version on the side. Or add different modes, such as easy,
normal, and hard. 

-----------------------------------------------------------

Reflection 5:

How do the diagrams help you visualize the branch structure?

Diagrams help us address where each commit is, and where new branches are starting

-----------------------------------------------------------

Reflection 6:

What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?

The result is that all the changes are added togeter in the 
master branch again, including the commits from both branches.

----------------------------------------------------------

Reflection 7:

What are the pros and cons of Gitâ€™s automatic merging vs.
always doing merges manually

It is usually easier and not as messy. It does not take too
much time.

----------------------------------------------------------